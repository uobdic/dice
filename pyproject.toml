[project]
name = "uob_dice"
authors = [
    { name = "UoB DICE team", email = "lcg-admin@bristol.ac.uk" },
]
maintainers = [
    { name = "The UoB DICE Team", email = "lcg-admin@bristol.ac.uk" },
]
requires-python = ">=3.11"
dynamic = ["version"]
description = "Python Packages for DICE"
readme = "README.md"

classifiers = [
    "License :: OSI Approved :: BSD License",
    "Topic :: Scientific/Engineering",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 4 - Beta",
]

[project.urls]
Homepage = "https://github.com/uobdic/dice"
"Bug Tracker" = "https://github.com/uobdic/dice/issues"
Discussions = "https://github.com/uobdic/dice/discussions"
Changelog = "https://github.com/uobdic/dice/releases"

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/dice/_version.py"

[tool.uv.sources]
dice-cli = {workspace = true}
dice-lib = {workspace = true}
dice-api = {workspace = true}

[tool.uv.workspace]
members = ["packages/*"]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.pylint]
py-version = "3.11"
ignore-paths = [".*/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "wrong-import-position",
]


[tool.ruff]
src = ["src", "packages/dice-api/src", "packages/dice-cli", "packages/dice-lib/src"]

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
ignore = [
  "PLR",    # Design related pylint codes
]
isort.required-imports = ["from __future__ import annotations"]
# Uncomment if using a _compat.typing backport
# typing-modules = ["dice_api._compat.typing"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
